{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","lastPressedKey","handleKeyUp","event","setState","key","document","addEventListener","this","removeEventListener","className","React","Component","ReactDOM","render","getElementById"],"mappings":"oNAMaA,EAAb,4MACEC,MAAkB,CAChBC,eAAgB,IAFpB,EAaEC,YAAc,SAACC,GACb,EAAKC,SAAS,CAAEH,eAAgBE,EAAME,OAd1C,uDAKE,WACEC,SAASC,iBAAiB,QAASC,KAAKN,eAN5C,kCASE,WACEI,SAASG,oBAAoB,QAASD,KAAKN,eAV/C,oBAiBE,WACE,OACE,qBAAKQ,UAAU,MAAf,SAEGF,KAAKR,MAAMC,eACV,oBAAGS,UAAU,eAAb,sCAEGF,KAAKR,MAAMC,eAFd,OAMA,gCA5BV,GAAyBU,IAAMC,W,MCD/BC,IAASC,OACP,cAAC,EAAD,IACAR,SAASS,eAAe,W","file":"static/js/main.8db87d83.chunk.js","sourcesContent":["import React from 'react';\n\ntype AppState = {\n  lastPressedKey: string;\n};\n\nexport class App extends React.Component<{}, AppState> {\n  state: AppState = {\n    lastPressedKey: '',\n  };\n\n  componentDidMount(): void {\n    document.addEventListener('keyup', this.handleKeyUp);\n  }\n\n  componentWillUnmount(): void {\n    document.removeEventListener('keyup', this.handleKeyUp);\n  }\n\n  handleKeyUp = (event: KeyboardEvent) => {\n    this.setState({ lastPressedKey: event.key });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n\n        {this.state.lastPressedKey ? (\n          <p className=\"App__message\">\n            The last pressed key is [\n            {this.state.lastPressedKey}\n            ]\n          </p>\n        ) : (\n          'Nothing was pressed yet'\n        )}\n\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}